server:
  port: 8081


spring:
  application:
    name: account-service

  datasource:
    url: jdbc:mysql://mysql.default.svc.cluster.local:3306/accounts
    username: root
    password: mysql
    initialization-mode: never
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: account-created
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties.schema.registry.url: http://127.0.0.1:8085

springdoc:
  swagger-ui:
    path: /swagger-ui.html

loki:
  url: http://localhost:3100/loki/api/v1/push



management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  observations:
    key-values:
      application: account-service
  tracing:
    sampling:
      probability: 1.0

resilience4j:
  circuitbreaker:
    instances:
      User:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 30s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        minimum-number-of-calls: 5

  timelimiter:
    instances:
      User:
        timeout-duration: 15s

  retry:
    instances:
      User:
        max-attempts: 2
        wait-duration: 1s

  api-docs:
    path: /api-docs




logging:
  level:
    org.springframework.security: DEBUG
    io.github.resilience4j: DEBUG

user:
  service:
    url: http://localhost:8080